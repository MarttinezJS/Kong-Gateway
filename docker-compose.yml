version: "3.9"

networks:
  milanesa:
    driver: bridge
    external: true

services:
  kong-database:
    container_name: kongdb
    image: postgres:14.5-alpine
    restart: always
    networks:
      - milanesa
    environment:
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
      POSTGRES_DB: kong
  adminer:
    container_name: Adminer
    image: adminer:4.8.1-standalone
    restart: always
    ports:
      - 8002:8080
    networks:
      - milanesa
  kong-migration:
    image: kong:3.0.0-alpine
    command: "kong migrations bootstrap"
    networks:
      - milanesa
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database
  kong:
    container_name: kong-gateway
    image: kong:3.0.0-alpine
    restart: always
    networks:
      - milanesa
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DATABASE: postgres
      KONG_PG_HOST: kongdb
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    links:
      - kong-database
    ports:
      - "8000:8000"
    volumes:
      - ./config:/opt/kong
  konga:
    container_name: kong-gui
    image: pantsel/konga:next
    restart: always
    networks:
      - milanesa
    links:
      - kong:kong
    environment:
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "8001:1337"
